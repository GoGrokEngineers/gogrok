name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up SSH
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

      # Set up Linode CLI (if needed)
      - name: Install Python, pip, and Linode CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          sudo pip3 install linode-cli

      # Configure Linode CLI
      - name: Configure Linode CLI (Non-Interactive)
        env:
          LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
        run: |
          mkdir -p ~/.config/linode-cli
          echo "[DEFAULT]" > ~/.config/linode-cli/config
          echo "token = $LINODE_TOKEN" >> ~/.config/linode-cli/config

  docker-build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      # Checkout the code again
      - name: Checkout code
        uses: actions/checkout@v3

      # Build and start Docker Compose
      - name: Build and start Docker Compose
        run: |
          docker-compose -f docker-compose.yml up --build -d

      # Wait for containers to stabilize
      - name: Wait for containers
        run: |
          sleep 20  # Adjust time based on your container startup time

      # Tear down Docker containers (optional)
      - name: Tear down Docker containers
        run: |
          docker-compose -f docker-compose.yml down
