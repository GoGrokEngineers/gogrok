name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up SSH for connecting to the Linode server
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Configure Linode CLI (Non-Interactive)
      - name: Configure Linode CLI (Non-Interactive)
        env:
          LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
        run: |
          # Create the directory if it doesn't exist
          mkdir -p ~/.config/linode-cli
          # Write the token to the configuration file within the correct directory
          echo "[DEFAULT]" > ~/.config/linode-cli/config
          echo "token = $LINODE_TOKEN" >> ~/.config/linode-cli/config

  deploy:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      # Checkout code again for the deployment stage
      - name: Checkout code
        uses: actions/checkout@v3

      # Build Docker containers using Docker Compose
      - name: Build Docker images
        run: docker-compose -f docker-compose.yml build

      # Deploy the containers (this step may vary based on your requirements)
      - name: Deploy Docker containers
        run: docker-compose -f docker-compose.yml up -d

  linode-verify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Run Linode CLI command
        run: linode-cli linodes ls
